name: Aptos LC - Check for new tags and create issue

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight

jobs:
  check-tags:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch latest tag
        id: latest-tag
        run: |
          LATEST_TAG=$(curl --silent "https://api.github.com/repos/aptos-labs/aptos-core/releases" | jq -r '.[] | select(.name | ascii_downcase | contains("mainnet")) | .tag_name' | grep '^aptos-node-v' | sort -V | tail -n 1)
          CURRENT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [[ $(echo -e "$CURRENT_TAG\n$LATEST_TAG" | sort -V | tail -n 1) != $CURRENT_TAG ]]; then
            COMMIT_SHA=$(curl --silent "https://api.github.com/repos/aptos-labs/aptos-core/git/refs/tags/$LATEST_TAG" | jq -r .object.sha)
            echo "tag=${LATEST_TAG}" | tee -a $GITHUB_OUTPUT
            echo "sha=${COMMIT_SHA}" | tee -a $GITHUB_OUTPUT
          else
            echo "The current tag is up to date."
            exit 0
          fi

      - name: Fetch upstream branch for latest tag
        run: |
          git remote add upstream https://github.com/aptos-labs/aptos-core.git
          git fetch upstream ${{ steps.latest-tag.outputs.sha }}:refs/remotes/upstream/${{ steps.latest-tag.outputs.tag }}
          git push origin ${{ steps.latest-tag.outputs.tag }}
      
      # Note: This won't create duplicate issues, as once the latest tag branch is pushed to remote it will be the new current tag
      # Thus, the workflow will exit in the `Fetch latest tag` step as up to date
      - name: Create issue for release
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/ISSUE_TEMPLATE/tag_release.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ steps.latest-tag.outputs.tag }}
          UPSTREAM_URL: https://github.com/aptos-labs/aptos-core/releases/tag/${{ steps.latest-tag.outputs.tag }}
          RELEASE_PR_WORKFLOW: ${{ github.server_url }}/${{ github.repository }}/actions/workflows/aptos-light-client-patch-release-pr.yml
          RELEASE_MERGE_WORKFLOW: ${{ github.server_url }}/${{ github.repository }}/actions/workflows/aptos-light-client-patch-release-publish.yml
          WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

